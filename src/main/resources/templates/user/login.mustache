<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="/css/sign.css?after" rel="stylesheet">
    <title>SignIn</title>
</head>
<body>
<div class="container" id="container">
    <div class="form-container sign-up-container">
        <!--회원가입-->
        <form action="/user/Signup" method="post">
            <h1>Create Account</h1>
            <input type="text" name="uid" placeholder="Id" autocomplete="username"/>
            <input type="password" name="upassword" placeholder="Password" autocomplete="new-password"/>
            <input type="text" name="uname" placeholder="Nickname"/>
            <input type="email" name="email" placeholder="Email" autocomplete="email"/>
            <button type="submit">Sign Up</button>
        </form>
    </div>
    <div class="form-container sign-in-container">
        <!--로그인-->
        <form id = "login-form">
            <h1>Sign in</h1>
            <br>
            <input type="text" class="form-control" id="uid" placeholder="Id" autocomplete="username"/>
            <input type="password" class="form-control" id="upassword" placeholder="Password" autocomplete="current-password"/>
            <a href="/user/findid">Forgot your id/password?</a>
            <button type="submit">Sign In</button>
        </form>
    </div>
    <div class="overlay-container">
        <div class="overlay">
            <!--회원가입-->
            <div class="overlay-panel overlay-left">
                <h1>Welcome Back!</h1>
                <p>To keep connected with us please login with your personal info</p>
                <button class="ghost" id="signIn">Sign In</button>
            </div>
            <!--로그인-->
            <div class="overlay-panel overlay-right">
                <h1>Hello !</h1>
                <p>Sign up and start EATTODAY</p>
                <button type="submit" class="ghost" id="signUp">Sign up</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    document.getElementById("login-form").addEventListener("submit", async function(event) {
        event.preventDefault(); // 기본 제출 동작 방지

        const uid = document.getElementById("uid").value;
        const password = document.getElementById("upassword").value;

        const response = await fetch("/login", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({uid, upassword: password}),
            credentials: 'include'
        });

        /*if (response.ok) {
            const token = response.headers.get("Authorization");
            console.log(token)
            if (token) {
                localStorage.setItem("token", token);
                alert("로그인 성공!");
                const categoryResponse = await fetch("/category", {
                    method: "GET",
                    headers: {
                        "Authorization": `${token}`
                    }
                });

                if (categoryResponse.ok) {
                    alert("로그인 및 /category 페이지 로딩 성공!");
                    window.location.href = "/rest/category"
                } else {
                    const errorMessage = await categoryResponse.text();  // 실패시 서버의 응답 메시지 확인
                    alert(`카테고리 접근 실패: ${errorMessage}`);
                }
            }
            else {
                alert("로그인 실패. 아이디/비밀번호를 확인하세요.");
            }

        }*/

        if (response.ok) {
            alert("로그인 성공!");
            const categoryResponse = await fetch("/category", {
                method: "GET",
                headers: {}
            });

            if (categoryResponse.ok) {
                alert("로그인 및 /category 페이지 로딩 성공!");
                window.location.href = "/rest/category"
            } else {
                const errorMessage = await categoryResponse.text();  // 실패시 서버의 응답 메시지 확인
                alert(`카테고리 접근 실패: ${errorMessage}`);
            }
        }
    });

    function getAuthHeaders() {
        const token = localStorage.getItem("token");
        return token ? { "Authorization": token } : {};
    }

    const signUpButton = document.getElementById('signUp');
    const signInButton = document.getElementById('signIn');
    const container = document.getElementById('container');

    signUpButton.addEventListener('click', () => {
        container.classList.add("right-panel-active");
    });

    signInButton.addEventListener('click', () => {
        container.classList.remove("right-panel-active");
    });
</script>
</body>
</html>

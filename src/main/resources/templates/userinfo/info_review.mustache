{{>layout/header}}

<div class="userinfo_top">
    <p>MY PAGE</p>
</div>

<div class="userinfo_category">
    <p onclick="window.location.href='/{{uid}}'" class="userinfo_category_link">회원정보 수정</p>
    <p onclick="window.location.href='/{{uid}}/review'" class="userinfo_category_link active">리뷰 관리</p>
    <p onclick="window.location.href='/api/{{uid}}/like'" class="userinfo_category_link">즐겨찾기 관리</p>
</div>

<!-- 리뷰 조회, 수정, 삭제 -->
<div class="userinfo_background">
    <div class="userinfo_title">작성한 리뷰</div>

    <table class="userinfo_review_table">
        <tbody>
        {{#reviews}}
            <tr>
                {{#store}}
                    <td style="width:20%;"><a href="/rest/{{id}}/{{uid}}">{{store_name}}</a></td>
                    <td style="width:25%;">{{store_phone}}</td>
                {{/store}}
                <td style="width:40%;">{{body}}</td>
                <td style="width:15%;">
                    <button class="button userinfo_button" onclick="openModal()"
                            data-bs-toggle="modal"
                            data-bs-target="#review-edit-Modal"
                            data-bs-id="{{id}}"
                            data-bs-store="{{store}}"
                            data-bs-userid="{{userid}}"
                            data-bs-body="{{body}}">수정
                    </button>
                    <button class="button review-delete-btn userinfo_button" data-review-id="{{id}}">삭제</button>
                </td>
            </tr>
        {{/reviews}}
        </tbody>
    </table>

    <div id="modalBackground" class="modal_background"></div>

    <div id="review-edit-Modal" class="modal">
        <div class="modal_content">
            <span class="close" id="closeModal">&times;</span>
            <h2>수정하기</h2>
            <form id="editForm">
                <input type="hidden" id="edit-review-id">
                <input type="hidden" id="edit-review-store">
                <input type="hidden" id="edit-review-userid">
                <textarea type="text" id="edit-review-body" class="modal_textarea"></textarea><br>
                <button type="button" class="userinfo_button" id="review-update-btn">저장</button>
            </form>
        </div>
    </div>

    <!-- 페이지네이션 버튼 -->
    <div class="pagination userinfo_review_next">
        <button class="next_button" onclick="changePage({{previousPage}})" {{#isFirstPage}}disabled{{/isFirstPage}}>이전
        </button>
        <button class="next_button" onclick="changePage({{nextPage}})" {{#isLastPage}}disabled{{/isLastPage}}>다음
        </button>
    </div>

</div>

<!-- 모달 열기, 닫기 -->
<script>
    function openModal() {
        document.getElementById("review-edit-Modal").style.display = "block";
    }

    document.getElementById("closeModal").onclick = function () {
        document.getElementById("review-edit-Modal").style.display = "none";
    }
</script>

<!-- 리뷰 수정 -->
<script>
    document.querySelectorAll(".button[data-bs-toggle='modal']").forEach(btn => {
        btn.addEventListener("click", event => {
            const review = event.target;

            document.querySelector("#edit-review-id").value = review.getAttribute("data-bs-id");
            document.querySelector("#edit-review-store").value = review.getAttribute("data-bs-store");
            document.querySelector("#edit-review-userid").value = review.getAttribute("data-bs-userid");
            document.querySelector("#edit-review-body").value = review.getAttribute("data-bs-body");

            openModal();
        });
    });

    document.querySelector("#review-update-btn").addEventListener("click", () => {
        const review = {
            id: document.querySelector("#edit-review-id").value,
            store: document.querySelector("#edit-review-store").value,
            userid: document.querySelector("#edit-review-userid").value,
            body: document.querySelector("#edit-review-body").value
        };

        fetch(`/api/reviews/${review.id}`, {
            method: "PATCH",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(review)
        }).then(response => {
            alert(response.ok ? "댓글이 수정됐습니다." : "댓글 수정에 실패하였습니다.");
            window.location.reload();
        });
    });
</script>

<!-- 리뷰 삭제 -->
<script>
    document.querySelectorAll(".review-delete-btn").forEach(btn => {
        btn.addEventListener("click", event => {
            const reviewId = event.target.getAttribute("data-review-id");

            fetch(`/api/reviews/${reviewId}`, {
                method: "DELETE"
            }).then(response => {
                if (!response.ok) {
                    alert("댓글 삭제 실패");
                    return;
                }

                alert(`${reviewId}번 댓글을 삭제했습니다`);
                window.location.reload();
            }).catch(error => {
                console.error("댓글 삭제 중 오류 발생:", error);
                alert("댓글 삭제 중 오류가 발생했습니다.");
            });
        });
    });
</script>

<!-- 페이지네이션 -->
<script>
    function changePage(page) {
        const urlParams = new URLSearchParams(window.location.search);
        urlParams.set('page', page);
        window.location.search = urlParams.toString();
    }
</script>

<script>
    const links = document.querySelectorAll('.userinfo_category_link');

    // 클릭 이벤트 추가
    links.forEach(link => {
        link.addEventListener('click', () => {
            // 모든 링크의 active 클래스 제거
            links.forEach(l => l.classList.remove('active'));
            // 클릭된 링크에 active 클래스 추가
            link.classList.add('active');
        });
    });
</script>

</body>
</html>
